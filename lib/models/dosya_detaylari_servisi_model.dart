///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class DosyaDetaylariServisiClaimDetailsAslob {
/*
{
  "code": "4",
  "shortDescription": "Motor",
  "longDescription": "Motor"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsAslob({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsAslob.fromJson(Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsSubLossType {
/*
{
  "code": "717",
  "shortDescription": "Motorlu Kara Taşıtları - Kasko",
  "longDescription": "Motorlu Kara Taşıtları - Kasko"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsSubLossType({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsSubLossType.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsCauseOfLoss {
/*
{
  "code": "11111",
  "shortDescription": "Çarpma",
  "longDescription": "Çarpma"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsCauseOfLoss({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsCauseOfLoss.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLobCategory {
/*
{
  "code": "LB1",
  "shortDescription": "OTO",
  "longDescription": "OTO"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLobCategory({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLobCategory.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsClaimStatus {
/*
{
  "code": "OP",
  "shortDescription": "AÇIK",
  "longDescription": "AÇIK"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsClaimStatus({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsClaimStatus.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentDetailType {
/*
{
  "code": "558",
  "shortDescription": "TAZMİNAT",
  "longDescription": "TAZMİNAT"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentDetailType({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentDetailType.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentType {
/*
{
  "code": "5",
  "shortDescription": "TAZMİNAT",
  "longDescription": "TAZMİNAT"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentType({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentType.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetails {
/*
{
  "paymentDetailAmount": 5000,
  "paymentType": {
    "code": "5",
    "shortDescription": "TAZMİNAT",
    "longDescription": "TAZMİNAT"
  },
  "paymentDetailType": {
    "code": "558",
    "shortDescription": "TAZMİNAT",
    "longDescription": "TAZMİNAT"
  }
} 
*/

  int? paymentDetailAmount;
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentType?
      paymentType;
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentDetailType?
      paymentDetailType;

  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetails({
    this.paymentDetailAmount,
    this.paymentType,
    this.paymentDetailType,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetails.fromJson(
      Map<String, dynamic> json) {
    paymentDetailAmount = json['paymentDetailAmount']?.toInt();
    paymentType = (json['paymentType'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentType
            .fromJson(json['paymentType'])
        : null;
    paymentDetailType = (json['paymentDetailType'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetailsPaymentDetailType
            .fromJson(json['paymentDetailType'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['paymentDetailAmount'] = paymentDetailAmount;
    if (paymentType != null) {
      data['paymentType'] = paymentType!.toJson();
    }
    if (paymentDetailType != null) {
      data['paymentDetailType'] = paymentDetailType!.toJson();
    }
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentMethod {
/*
{
  "code": "6",
  "shortDescription": "EFT / HAVALE",
  "longDescription": "EFT / HAVALE"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentMethod({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentMethod.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentFinalType {
/*
{
  "code": "03",
  "shortDescription": "SON ÖDEME",
  "longDescription": "SON ÖDEME"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentFinalType({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentFinalType.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentStatus {
/*
{
  "code": "SAV",
  "shortDescription": "İNCELEMEDE",
  "longDescription": "İNCELEMEDE"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentStatus({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentStatus.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeDataPayeeRoleList {
/*
{
  "code": "CMT",
  "shortDescription": "HAK SAHİBİ",
  "longDescription": "HAK SAHİBİ"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeDataPayeeRoleList({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeDataPayeeRoleList.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeData {
/*
{
  "bankAccountNumber": "T************************1",
  "payeeName": "İSİM SOYİSİM",
  "payeeRoleList": [
    {
      "code": "CMT",
      "shortDescription": "HAK SAHİBİ",
      "longDescription": "HAK SAHİBİ"
    }
  ]
} 
*/

  String? bankAccountNumber;
  String? payeeName;
  List<DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeDataPayeeRoleList?>?
      payeeRoleList;

  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeData({
    this.bankAccountNumber,
    this.payeeName,
    this.payeeRoleList,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeData.fromJson(
      Map<String, dynamic> json) {
    bankAccountNumber = json['bankAccountNumber']?.toString();
    payeeName = json['payeeName']?.toString();
    if (json['payeeRoleList'] != null) {
      final v = json['payeeRoleList'];
      final arr0 =
          <DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeDataPayeeRoleList>[];
      v.forEach((v) {
        arr0.add(
            DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeDataPayeeRoleList
                .fromJson(v));
      });
      payeeRoleList = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['bankAccountNumber'] = bankAccountNumber;
    data['payeeName'] = payeeName;
    if (payeeRoleList != null) {
      final v = payeeRoleList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['payeeRoleList'] = arr0;
    }
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataList {
/*
{
  "paymentID": "DDAC590689944999",
  "paymentTotalAmount": 5000,
  "paymentCurrency": "TL",
  "paymentScheduleDate": "2021-11-15T00:00:00",
  "paymentPostDate": "1800-01-01T00:00:00",
  "payeeData": {
    "bankAccountNumber": "T************************1",
    "payeeName": "İSİM SOYİSİM",
    "payeeRoleList": [
      {
        "code": "CMT",
        "shortDescription": "HAK SAHİBİ",
        "longDescription": "HAK SAHİBİ"
      }
    ]
  },
  "paymentStatus": {
    "code": "SAV",
    "shortDescription": "İNCELEMEDE",
    "longDescription": "İNCELEMEDE"
  },
  "paymentFinalType": {
    "code": "03",
    "shortDescription": "SON ÖDEME",
    "longDescription": "SON ÖDEME"
  },
  "paymentMethod": {
    "code": "6",
    "shortDescription": "EFT / HAVALE",
    "longDescription": "EFT / HAVALE"
  },
  "paymentIssueDate": "2021-11-12T00:00:00",
  "paymentDetails": [
    {
      "paymentDetailAmount": 5000,
      "paymentType": {
        "code": "5",
        "shortDescription": "TAZMİNAT",
        "longDescription": "TAZMİNAT"
      },
      "paymentDetailType": {
        "code": "558",
        "shortDescription": "TAZMİNAT",
        "longDescription": "TAZMİNAT"
      }
    }
  ]
} 
*/

  String? paymentID;
  int? paymentTotalAmount;
  String? paymentCurrency;
  String? paymentScheduleDate;
  String? paymentPostDate;
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeData?
      payeeData;
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentStatus?
      paymentStatus;
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentFinalType?
      paymentFinalType;
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentMethod?
      paymentMethod;
  String? paymentIssueDate;
  List<DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetails?>?
      paymentDetails;

  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataList({
    this.paymentID,
    this.paymentTotalAmount,
    this.paymentCurrency,
    this.paymentScheduleDate,
    this.paymentPostDate,
    this.payeeData,
    this.paymentStatus,
    this.paymentFinalType,
    this.paymentMethod,
    this.paymentIssueDate,
    this.paymentDetails,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataList.fromJson(
      Map<String, dynamic> json) {
    paymentID = json['paymentID']?.toString();
    paymentTotalAmount = json['paymentTotalAmount']?.toInt();
    paymentCurrency = json['paymentCurrency']?.toString();
    paymentScheduleDate = json['paymentScheduleDate']?.toString();
    paymentPostDate = json['paymentPostDate']?.toString();
    payeeData = (json['payeeData'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPayeeData
            .fromJson(json['payeeData'])
        : null;
    paymentStatus = (json['paymentStatus'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentStatus
            .fromJson(json['paymentStatus'])
        : null;
    paymentFinalType = (json['paymentFinalType'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentFinalType
            .fromJson(json['paymentFinalType'])
        : null;
    paymentMethod = (json['paymentMethod'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentMethod
            .fromJson(json['paymentMethod'])
        : null;
    paymentIssueDate = json['paymentIssueDate']?.toString();
    if (json['paymentDetails'] != null) {
      final v = json['paymentDetails'];
      final arr0 =
          <DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetails>[];
      v.forEach((v) {
        arr0.add(
            DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataListPaymentDetails
                .fromJson(v));
      });
      paymentDetails = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['paymentID'] = paymentID;
    data['paymentTotalAmount'] = paymentTotalAmount;
    data['paymentCurrency'] = paymentCurrency;
    data['paymentScheduleDate'] = paymentScheduleDate;
    data['paymentPostDate'] = paymentPostDate;
    if (payeeData != null) {
      data['payeeData'] = payeeData!.toJson();
    }
    if (paymentStatus != null) {
      data['paymentStatus'] = paymentStatus!.toJson();
    }
    if (paymentFinalType != null) {
      data['paymentFinalType'] = paymentFinalType!.toJson();
    }
    if (paymentMethod != null) {
      data['paymentMethod'] = paymentMethod!.toJson();
    }
    data['paymentIssueDate'] = paymentIssueDate;
    if (paymentDetails != null) {
      final v = paymentDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['paymentDetails'] = arr0;
    }
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsClaimant {
/*
{
  "firstName": "İSİM",
  "middleName": "\t",
  "lastName": "SOYİSİM",
  "orgName": "\t",
  "fullName": "İSİM \t SOYİSİM",
  "identityNumber": "44444444444",
  "participantId": "64E7641CB1BD3E12"
} 
*/

  String? firstName;
  String? middleName;
  String? lastName;
  String? orgName;
  String? fullName;
  String? identityNumber;
  String? participantId;

  DosyaDetaylariServisiClaimDetailsLineDetailsClaimant({
    this.firstName,
    this.middleName,
    this.lastName,
    this.orgName,
    this.fullName,
    this.identityNumber,
    this.participantId,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsClaimant.fromJson(
      Map<String, dynamic> json) {
    firstName = json['firstName']?.toString();
    middleName = json['middleName']?.toString();
    lastName = json['lastName']?.toString();
    orgName = json['orgName']?.toString();
    fullName = json['fullName']?.toString();
    identityNumber = json['identityNumber']?.toString();
    participantId = json['participantId']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['firstName'] = firstName;
    data['middleName'] = middleName;
    data['lastName'] = lastName;
    data['orgName'] = orgName;
    data['fullName'] = fullName;
    data['identityNumber'] = identityNumber;
    data['participantId'] = participantId;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsCreatorOrgEntityUnit {
/*
{
  "code": "25",
  "shortDescription": "DİĞER BİRİM",
  "longDescription": "DİĞER BİRİM"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsCreatorOrgEntityUnit({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsCreatorOrgEntityUnit.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsLineTypeDescription {
/*
{
  "code": "1111111",
  "shortDescription": "Çarpma",
  "longDescription": "Çarpma"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsLineTypeDescription({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsLineTypeDescription.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsCauseOfLoss {
/*
{
  "code": "22222",
  "shortDescription": "Çarpma",
  "longDescription": "Çarpma"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsCauseOfLoss({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsCauseOfLoss.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsLineStatus {
/*
{
  "code": "05",
  "shortDescription": "AÇIK",
  "longDescription": "AÇIK"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsLineStatus({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsLineStatus.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetailsClaimantLine {
/*
{
  "code": "1111111",
  "shortDescription": "Çarpma",
  "longDescription": "Çarpma"
} 
*/

  String? code;
  String? shortDescription;
  String? longDescription;

  DosyaDetaylariServisiClaimDetailsLineDetailsClaimantLine({
    this.code,
    this.shortDescription,
    this.longDescription,
  });
  DosyaDetaylariServisiClaimDetailsLineDetailsClaimantLine.fromJson(
      Map<String, dynamic> json) {
    code = json['code']?.toString();
    shortDescription = json['shortDescription']?.toString();
    longDescription = json['longDescription']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['code'] = code;
    data['shortDescription'] = shortDescription;
    data['longDescription'] = longDescription;
    return data;
  }
}

class DosyaDetaylariServisiClaimDetailsLineDetails {
/*
{
  "createDate": "2021-02-19T15:25:05",
  "lineId": "AE3C494F3EA49E0D",
  "claimantLine": {
    "code": "1111111",
    "shortDescription": "Çarpma",
    "longDescription": "Çarpma"
  },
  "lineStatus": {
    "code": "05",
    "shortDescription": "AÇIK",
    "longDescription": "AÇIK"
  },
  "closeReason": "\t",
  "causeOfLoss": {
    "code": "22222",
    "shortDescription": "Çarpma",
    "longDescription": "Çarpma"
  },
  "estimatedLossAmount": 3000,
  "estimatedLossAmountCurrency": "TL",
  "coverageStatusCode": "20",
  "lineTypeDescription": {
    "code": "1111111",
    "shortDescription": "Çarpma",
    "longDescription": "Çarpma"
  },
  "claimantParticipantId": "64E7641CB1BD3E12",
  "coverId": "1111111",
  "subCoverId": "2222222",
  "productId": "3333333",
  "tkzCode": "\t",
  "coverageSBMType": "",
  "subrogationPotential": "Y",
  "creatorOrgEntityUnit": {
    "code": "25",
    "shortDescription": "DİĞER BİRİM",
    "longDescription": "DİĞER BİRİM"
  },
  "claimant": {
    "firstName": "İSİM",
    "middleName": "\t",
    "lastName": "SOYİSİM",
    "orgName": "\t",
    "fullName": "İSİM \t SOYİSİM",
    "identityNumber": "44444444444",
    "participantId": "64E7641CB1BD3E12"
  },
  "paymentDataList": [
    {
      "paymentID": "DDAC590689944999",
      "paymentTotalAmount": 5000,
      "paymentCurrency": "TL",
      "paymentScheduleDate": "2021-11-15T00:00:00",
      "paymentPostDate": "1800-01-01T00:00:00",
      "payeeData": {
        "bankAccountNumber": "T************************1",
        "payeeName": "İSİM SOYİSİM",
        "payeeRoleList": [
          {
            "code": "CMT",
            "shortDescription": "HAK SAHİBİ",
            "longDescription": "HAK SAHİBİ"
          }
        ]
      },
      "paymentStatus": {
        "code": "SAV",
        "shortDescription": "İNCELEMEDE",
        "longDescription": "İNCELEMEDE"
      },
      "paymentFinalType": {
        "code": "03",
        "shortDescription": "SON ÖDEME",
        "longDescription": "SON ÖDEME"
      },
      "paymentMethod": {
        "code": "6",
        "shortDescription": "EFT / HAVALE",
        "longDescription": "EFT / HAVALE"
      },
      "paymentIssueDate": "2021-11-12T00:00:00",
      "paymentDetails": [
        {
          "paymentDetailAmount": 5000,
          "paymentType": {
            "code": "5",
            "shortDescription": "TAZMİNAT",
            "longDescription": "TAZMİNAT"
          },
          "paymentDetailType": {
            "code": "558",
            "shortDescription": "TAZMİNAT",
            "longDescription": "TAZMİNAT"
          }
        }
      ]
    }
  ]
} 
*/

  String? createDate;
  String? lineId;
  DosyaDetaylariServisiClaimDetailsLineDetailsClaimantLine? claimantLine;
  DosyaDetaylariServisiClaimDetailsLineDetailsLineStatus? lineStatus;
  String? closeReason;
  DosyaDetaylariServisiClaimDetailsLineDetailsCauseOfLoss? causeOfLoss;
  int? estimatedLossAmount;
  String? estimatedLossAmountCurrency;
  String? coverageStatusCode;
  DosyaDetaylariServisiClaimDetailsLineDetailsLineTypeDescription?
      lineTypeDescription;
  String? claimantParticipantId;
  String? coverId;
  String? subCoverId;
  String? productId;
  String? tkzCode;
  String? coverageSBMType;
  String? subrogationPotential;
  DosyaDetaylariServisiClaimDetailsLineDetailsCreatorOrgEntityUnit?
      creatorOrgEntityUnit;
  DosyaDetaylariServisiClaimDetailsLineDetailsClaimant? claimant;
  List<DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataList?>?
      paymentDataList;

  DosyaDetaylariServisiClaimDetailsLineDetails({
    this.createDate,
    this.lineId,
    this.claimantLine,
    this.lineStatus,
    this.closeReason,
    this.causeOfLoss,
    this.estimatedLossAmount,
    this.estimatedLossAmountCurrency,
    this.coverageStatusCode,
    this.lineTypeDescription,
    this.claimantParticipantId,
    this.coverId,
    this.subCoverId,
    this.productId,
    this.tkzCode,
    this.coverageSBMType,
    this.subrogationPotential,
    this.creatorOrgEntityUnit,
    this.claimant,
    this.paymentDataList,
  });
  DosyaDetaylariServisiClaimDetailsLineDetails.fromJson(
      Map<String, dynamic> json) {
    createDate = json['createDate']?.toString();
    lineId = json['lineId']?.toString();
    claimantLine = (json['claimantLine'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsClaimantLine.fromJson(
            json['claimantLine'])
        : null;
    lineStatus = (json['lineStatus'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsLineStatus.fromJson(
            json['lineStatus'])
        : null;
    closeReason = json['closeReason']?.toString();
    causeOfLoss = (json['causeOfLoss'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsCauseOfLoss.fromJson(
            json['causeOfLoss'])
        : null;
    estimatedLossAmount = json['estimatedLossAmount']?.toInt();
    estimatedLossAmountCurrency =
        json['estimatedLossAmountCurrency']?.toString();
    coverageStatusCode = json['coverageStatusCode']?.toString();
    lineTypeDescription = (json['lineTypeDescription'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsLineTypeDescription
            .fromJson(json['lineTypeDescription'])
        : null;
    claimantParticipantId = json['claimantParticipantId']?.toString();
    coverId = json['coverId']?.toString();
    subCoverId = json['subCoverId']?.toString();
    productId = json['productId']?.toString();
    tkzCode = json['tkzCode']?.toString();
    coverageSBMType = json['coverageSBMType']?.toString();
    subrogationPotential = json['subrogationPotential']?.toString();
    creatorOrgEntityUnit = (json['creatorOrgEntityUnit'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsCreatorOrgEntityUnit
            .fromJson(json['creatorOrgEntityUnit'])
        : null;
    claimant = (json['claimant'] != null)
        ? DosyaDetaylariServisiClaimDetailsLineDetailsClaimant.fromJson(
            json['claimant'])
        : null;
    if (json['paymentDataList'] != null) {
      final v = json['paymentDataList'];
      final arr0 =
          <DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataList>[];
      v.forEach((v) {
        arr0.add(DosyaDetaylariServisiClaimDetailsLineDetailsPaymentDataList
            .fromJson(v));
      });
      paymentDataList = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['createDate'] = createDate;
    data['lineId'] = lineId;
    if (claimantLine != null) {
      data['claimantLine'] = claimantLine!.toJson();
    }
    if (lineStatus != null) {
      data['lineStatus'] = lineStatus!.toJson();
    }
    data['closeReason'] = closeReason;
    if (causeOfLoss != null) {
      data['causeOfLoss'] = causeOfLoss!.toJson();
    }
    data['estimatedLossAmount'] = estimatedLossAmount;
    data['estimatedLossAmountCurrency'] = estimatedLossAmountCurrency;
    data['coverageStatusCode'] = coverageStatusCode;
    if (lineTypeDescription != null) {
      data['lineTypeDescription'] = lineTypeDescription!.toJson();
    }
    data['claimantParticipantId'] = claimantParticipantId;
    data['coverId'] = coverId;
    data['subCoverId'] = subCoverId;
    data['productId'] = productId;
    data['tkzCode'] = tkzCode;
    data['coverageSBMType'] = coverageSBMType;
    data['subrogationPotential'] = subrogationPotential;
    if (creatorOrgEntityUnit != null) {
      data['creatorOrgEntityUnit'] = creatorOrgEntityUnit!.toJson();
    }
    if (claimant != null) {
      data['claimant'] = claimant!.toJson();
    }
    if (paymentDataList != null) {
      final v = paymentDataList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['paymentDataList'] = arr0;
    }
    return data;
  }
}

class DosyaDetaylariServisiClaimDetails {
/*
{
  "lineDetails": [
    {
      "createDate": "2021-02-19T15:25:05",
      "lineId": "AE3C494F3EA49E0D",
      "claimantLine": {
        "code": "1111111",
        "shortDescription": "Çarpma",
        "longDescription": "Çarpma"
      },
      "lineStatus": {
        "code": "05",
        "shortDescription": "AÇIK",
        "longDescription": "AÇIK"
      },
      "closeReason": "\t",
      "causeOfLoss": {
        "code": "22222",
        "shortDescription": "Çarpma",
        "longDescription": "Çarpma"
      },
      "estimatedLossAmount": 3000,
      "estimatedLossAmountCurrency": "TL",
      "coverageStatusCode": "20",
      "lineTypeDescription": {
        "code": "1111111",
        "shortDescription": "Çarpma",
        "longDescription": "Çarpma"
      },
      "claimantParticipantId": "64E7641CB1BD3E12",
      "coverId": "1111111",
      "subCoverId": "2222222",
      "productId": "3333333",
      "tkzCode": "\t",
      "coverageSBMType": "",
      "subrogationPotential": "Y",
      "creatorOrgEntityUnit": {
        "code": "25",
        "shortDescription": "DİĞER BİRİM",
        "longDescription": "DİĞER BİRİM"
      },
      "claimant": {
        "firstName": "İSİM",
        "middleName": "\t",
        "lastName": "SOYİSİM",
        "orgName": "\t",
        "fullName": "İSİM \t SOYİSİM",
        "identityNumber": "44444444444",
        "participantId": "64E7641CB1BD3E12"
      },
      "paymentDataList": [
        {
          "paymentID": "DDAC590689944999",
          "paymentTotalAmount": 5000,
          "paymentCurrency": "TL",
          "paymentScheduleDate": "2021-11-15T00:00:00",
          "paymentPostDate": "1800-01-01T00:00:00",
          "payeeData": {
            "bankAccountNumber": "T************************1",
            "payeeName": "İSİM SOYİSİM",
            "payeeRoleList": [
              {
                "code": "CMT",
                "shortDescription": "HAK SAHİBİ",
                "longDescription": "HAK SAHİBİ"
              }
            ]
          },
          "paymentStatus": {
            "code": "SAV",
            "shortDescription": "İNCELEMEDE",
            "longDescription": "İNCELEMEDE"
          },
          "paymentFinalType": {
            "code": "03",
            "shortDescription": "SON ÖDEME",
            "longDescription": "SON ÖDEME"
          },
          "paymentMethod": {
            "code": "6",
            "shortDescription": "EFT / HAVALE",
            "longDescription": "EFT / HAVALE"
          },
          "paymentIssueDate": "2021-11-12T00:00:00",
          "paymentDetails": [
            {
              "paymentDetailAmount": 5000,
              "paymentType": {
                "code": "5",
                "shortDescription": "TAZMİNAT",
                "longDescription": "TAZMİNAT"
              },
              "paymentDetailType": {
                "code": "558",
                "shortDescription": "TAZMİNAT",
                "longDescription": "TAZMİNAT"
              }
            }
          ]
        }
      ]
    }
  ],
  "policyCode": 701,
  "policyEndorsementNumber": 0,
  "policyOccurenceNumber": 4,
  "policyRenewalNumber": 0,
  "policyNumber": "1010960020",
  "claimNumber": "10109600200004",
  "claimStatus": {
    "code": "OP",
    "shortDescription": "AÇIK",
    "longDescription": "AÇIK"
  },
  "claimSource": "ASOS",
  "dateOfIncident": "2021-01-21T00:00:00",
  "dateReported": "2021-02-19T00:00:00",
  "lobCategory": {
    "code": "LB1",
    "shortDescription": "OTO",
    "longDescription": "OTO"
  },
  "causeOfLoss": {
    "code": "11111",
    "shortDescription": "Çarpma",
    "longDescription": "Çarpma"
  },
  "claimOwnerMail": "pdybhasar@anadolusigorta.com.tr",
  "subLossType": {
    "code": "717",
    "shortDescription": "Motorlu Kara Taşıtları - Kasko",
    "longDescription": "Motorlu Kara Taşıtları - Kasko"
  },
  "aslob": {
    "code": "4",
    "shortDescription": "Motor",
    "longDescription": "Motor"
  }
} 
*/

  List<DosyaDetaylariServisiClaimDetailsLineDetails?>? lineDetails;
  int? policyCode;
  int? policyEndorsementNumber;
  int? policyOccurenceNumber;
  int? policyRenewalNumber;
  String? policyNumber;
  String? claimNumber;
  DosyaDetaylariServisiClaimDetailsClaimStatus? claimStatus;
  String? claimSource;
  String? dateOfIncident;
  String? dateReported;
  DosyaDetaylariServisiClaimDetailsLobCategory? lobCategory;
  DosyaDetaylariServisiClaimDetailsCauseOfLoss? causeOfLoss;
  String? claimOwnerMail;
  DosyaDetaylariServisiClaimDetailsSubLossType? subLossType;
  DosyaDetaylariServisiClaimDetailsAslob? aslob;

  DosyaDetaylariServisiClaimDetails({
    this.lineDetails,
    this.policyCode,
    this.policyEndorsementNumber,
    this.policyOccurenceNumber,
    this.policyRenewalNumber,
    this.policyNumber,
    this.claimNumber,
    this.claimStatus,
    this.claimSource,
    this.dateOfIncident,
    this.dateReported,
    this.lobCategory,
    this.causeOfLoss,
    this.claimOwnerMail,
    this.subLossType,
    this.aslob,
  });
  DosyaDetaylariServisiClaimDetails.fromJson(Map<String, dynamic> json) {
    if (json['lineDetails'] != null) {
      final v = json['lineDetails'];
      final arr0 = <DosyaDetaylariServisiClaimDetailsLineDetails>[];
      v.forEach((v) {
        arr0.add(DosyaDetaylariServisiClaimDetailsLineDetails.fromJson(v));
      });
      lineDetails = arr0;
    }
    policyCode = json['policyCode']?.toInt();
    policyEndorsementNumber = json['policyEndorsementNumber']?.toInt();
    policyOccurenceNumber = json['policyOccurenceNumber']?.toInt();
    policyRenewalNumber = json['policyRenewalNumber']?.toInt();
    policyNumber = json['policyNumber']?.toString();
    claimNumber = json['claimNumber']?.toString();
    claimStatus = (json['claimStatus'] != null)
        ? DosyaDetaylariServisiClaimDetailsClaimStatus.fromJson(
            json['claimStatus'])
        : null;
    claimSource = json['claimSource']?.toString();
    dateOfIncident = json['dateOfIncident']?.toString();
    dateReported = json['dateReported']?.toString();
    lobCategory = (json['lobCategory'] != null)
        ? DosyaDetaylariServisiClaimDetailsLobCategory.fromJson(
            json['lobCategory'])
        : null;
    causeOfLoss = (json['causeOfLoss'] != null)
        ? DosyaDetaylariServisiClaimDetailsCauseOfLoss.fromJson(
            json['causeOfLoss'])
        : null;
    claimOwnerMail = json['claimOwnerMail']?.toString();
    subLossType = (json['subLossType'] != null)
        ? DosyaDetaylariServisiClaimDetailsSubLossType.fromJson(
            json['subLossType'])
        : null;
    aslob = (json['aslob'] != null)
        ? DosyaDetaylariServisiClaimDetailsAslob.fromJson(json['aslob'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (lineDetails != null) {
      final v = lineDetails;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['lineDetails'] = arr0;
    }
    data['policyCode'] = policyCode;
    data['policyEndorsementNumber'] = policyEndorsementNumber;
    data['policyOccurenceNumber'] = policyOccurenceNumber;
    data['policyRenewalNumber'] = policyRenewalNumber;
    data['policyNumber'] = policyNumber;
    data['claimNumber'] = claimNumber;
    if (claimStatus != null) {
      data['claimStatus'] = claimStatus!.toJson();
    }
    data['claimSource'] = claimSource;
    data['dateOfIncident'] = dateOfIncident;
    data['dateReported'] = dateReported;
    if (lobCategory != null) {
      data['lobCategory'] = lobCategory!.toJson();
    }
    if (causeOfLoss != null) {
      data['causeOfLoss'] = causeOfLoss!.toJson();
    }
    data['claimOwnerMail'] = claimOwnerMail;
    if (subLossType != null) {
      data['subLossType'] = subLossType!.toJson();
    }
    if (aslob != null) {
      data['aslob'] = aslob!.toJson();
    }
    return data;
  }
}

class DosyaDetaylariServisi {
/*
{
  "claimDetails": {
    "lineDetails": [
      {
        "createDate": "2021-02-19T15:25:05",
        "lineId": "AE3C494F3EA49E0D",
        "claimantLine": {
          "code": "1111111",
          "shortDescription": "Çarpma",
          "longDescription": "Çarpma"
        },
        "lineStatus": {
          "code": "05",
          "shortDescription": "AÇIK",
          "longDescription": "AÇIK"
        },
        "closeReason": "\t",
        "causeOfLoss": {
          "code": "22222",
          "shortDescription": "Çarpma",
          "longDescription": "Çarpma"
        },
        "estimatedLossAmount": 3000,
        "estimatedLossAmountCurrency": "TL",
        "coverageStatusCode": "20",
        "lineTypeDescription": {
          "code": "1111111",
          "shortDescription": "Çarpma",
          "longDescription": "Çarpma"
        },
        "claimantParticipantId": "64E7641CB1BD3E12",
        "coverId": "1111111",
        "subCoverId": "2222222",
        "productId": "3333333",
        "tkzCode": "\t",
        "coverageSBMType": "",
        "subrogationPotential": "Y",
        "creatorOrgEntityUnit": {
          "code": "25",
          "shortDescription": "DİĞER BİRİM",
          "longDescription": "DİĞER BİRİM"
        },
        "claimant": {
          "firstName": "İSİM",
          "middleName": "\t",
          "lastName": "SOYİSİM",
          "orgName": "\t",
          "fullName": "İSİM \t SOYİSİM",
          "identityNumber": "44444444444",
          "participantId": "64E7641CB1BD3E12"
        },
        "paymentDataList": [
          {
            "paymentID": "DDAC590689944999",
            "paymentTotalAmount": 5000,
            "paymentCurrency": "TL",
            "paymentScheduleDate": "2021-11-15T00:00:00",
            "paymentPostDate": "1800-01-01T00:00:00",
            "payeeData": {
              "bankAccountNumber": "T************************1",
              "payeeName": "İSİM SOYİSİM",
              "payeeRoleList": [
                {
                  "code": "CMT",
                  "shortDescription": "HAK SAHİBİ",
                  "longDescription": "HAK SAHİBİ"
                }
              ]
            },
            "paymentStatus": {
              "code": "SAV",
              "shortDescription": "İNCELEMEDE",
              "longDescription": "İNCELEMEDE"
            },
            "paymentFinalType": {
              "code": "03",
              "shortDescription": "SON ÖDEME",
              "longDescription": "SON ÖDEME"
            },
            "paymentMethod": {
              "code": "6",
              "shortDescription": "EFT / HAVALE",
              "longDescription": "EFT / HAVALE"
            },
            "paymentIssueDate": "2021-11-12T00:00:00",
            "paymentDetails": [
              {
                "paymentDetailAmount": 5000,
                "paymentType": {
                  "code": "5",
                  "shortDescription": "TAZMİNAT",
                  "longDescription": "TAZMİNAT"
                },
                "paymentDetailType": {
                  "code": "558",
                  "shortDescription": "TAZMİNAT",
                  "longDescription": "TAZMİNAT"
                }
              }
            ]
          }
        ]
      }
    ],
    "policyCode": 701,
    "policyEndorsementNumber": 0,
    "policyOccurenceNumber": 4,
    "policyRenewalNumber": 0,
    "policyNumber": "1010960020",
    "claimNumber": "10109600200004",
    "claimStatus": {
      "code": "OP",
      "shortDescription": "AÇIK",
      "longDescription": "AÇIK"
    },
    "claimSource": "ASOS",
    "dateOfIncident": "2021-01-21T00:00:00",
    "dateReported": "2021-02-19T00:00:00",
    "lobCategory": {
      "code": "LB1",
      "shortDescription": "OTO",
      "longDescription": "OTO"
    },
    "causeOfLoss": {
      "code": "11111",
      "shortDescription": "Çarpma",
      "longDescription": "Çarpma"
    },
    "claimOwnerMail": "pdybhasar@anadolusigorta.com.tr",
    "subLossType": {
      "code": "717",
      "shortDescription": "Motorlu Kara Taşıtları - Kasko",
      "longDescription": "Motorlu Kara Taşıtları - Kasko"
    },
    "aslob": {
      "code": "4",
      "shortDescription": "Motor",
      "longDescription": "Motor"
    }
  }
} 
*/

  DosyaDetaylariServisiClaimDetails? claimDetails;

  DosyaDetaylariServisi({
    this.claimDetails,
  });
  DosyaDetaylariServisi.fromJson(Map<String, dynamic> json) {
    claimDetails = (json['claimDetails'] != null)
        ? DosyaDetaylariServisiClaimDetails.fromJson(json['claimDetails'])
        : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (claimDetails != null) {
      data['claimDetails'] = claimDetails!.toJson();
    }
    return data;
  }
}
